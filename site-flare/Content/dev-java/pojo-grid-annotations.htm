<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
<head></head>
<body>
<h1>Grid Metadata</h1>
  

<h1 id="gigaspacecontext">GigaSpaceContext</h1>

<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>

<tbody>
<tr>
<td>Attribute Annotation</td>
<td>@GigaSpaceContext</td>
</tr>

<tr>
<td>Description</td>
<td>In previous Spring releases, Spring only allowed you to inject the GigaSpace instance using setter injection or constructor injection. XAP extended this injection mechanism by allowing you to use annotations to inject a GigaSpace instance. As of Spring 2.5, this is no longer required since Spring support annotation based injection using the @Resource or @Autowired annotations.</td>
</tr>
</tbody>
</table>

<div class="row"><div class="easyui-accordion" data-options="selected:'-1'" plain="true"><div title="Annotation" style="padding:10px;"><pre><code class="language-java">
//There can be more than one GigaSpace instance defined

public class MyService {

    @GigaSpaceContext(name="directGigaSpace")
    private GigaSpace directGigaSpace;

    @GigaSpaceContext(name="clusteredGigaSpace")
    private GigaSpace clusteredGigaSpace;
}
</code></pre>
</div>
</div></div>

<p>There is no need to have a setter for the GigaSpace instance, and by annotating it with GigaSpaceContext, a GigaSpace instance is automatically injected. In order to enable this feature, the following element needs to be configured in the Spring application context:</p>

<div class="row"><div class="easyui-accordion" data-options="selected:'-1'" plain="true"><div title="Spring Configuration" style="padding:10px;"><div class="easyui-tabs" plain="true" data-options=""><div title="  Namespace " style="padding:10px"><pre><code class="language-xml">
 &lt;os-core:giga-space-context/&gt;

 &lt;os-core:embedded-space id="space" space-name="mySpace"/&gt;

 &lt;os-core:giga-space id="directGigaSpace" space="space"/&gt;

 &lt;os-core:giga-space id="clusteredGigaSpace" space="space" clustered="true"/&gt;

 &lt;bean id="myService" class="eg.MyService" /&gt;
</code></pre>
</div>
<div title="   Plain XML " style="padding:10px"><pre><code class="language-xml">
 &lt;bean id="gigaSpaceContext" class="org.openspaces.core.context.GigaSpaceContextBeanPostProcessor" /&gt;

 &lt;bean id="space" class="org.openspaces.core.space.EmbeddedSpaceFactoryBean"&gt;
     &lt;property name="name" value="space" /&gt;
 &lt;/bean&gt;

 &lt;bean id="directGigaSpace" class="org.openspaces.core.GigaSpaceFactoryBean"&gt;
    &lt;property name="space" ref="space" /&gt;
 &lt;/bean&gt;

 &lt;bean id="clusteredGigaSpace" class="org.openspaces.core.GigaSpaceFactoryBean"&gt;
    &lt;property name="space" ref="space" /&gt;
    &lt;proeprty name="clustered" value="true" /&gt;
 &lt;/bean&gt;

 &lt;bean id="myService" class="eg.MyService" /&gt;
</code></pre>
</div>
</div>
</div>
</div></div>

<h1 id="gigaspacelatecontext">GigaSpaceLateContext</h1>

<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>

<tbody>
<tr>
<td>Class Annotation</td>
<td></td>
</tr>

<tr>
<td>Attribute Annotation</td>
<td>@GigaSpaceLateContext</td>
</tr>

<tr>
<td>Description</td>
<td>XAP allows you to define beans (such as filters), that are later injected to the actual space. If such beans require access to the GigaSpace instance, a cyclic dependency occurs (GigaSpace requires the Space, but the Space requires the filter injection). XAP allows you to use the same annotation-based injection mechanism in order to inject the GigaSpace instance at a different lifecycle stage.</td>
</tr>
</tbody>
</table>

<div class="row"><div class="easyui-accordion" data-options="selected:'-1'" plain="true"><div title="Annotation" style="padding:10px;"><pre><code class="language-java">public class MyService {

    @GigaSpaceLateContext
    private GigaSpace gigaSpace;

}
</code></pre>
</div>
</div></div>

<p>There is no need to have a setter for the <code>GigaSpace</code> instance, and by annotating it with <code>GigaSpaceLateContext</code>, a <code>GigaSpace</code> instance is automatically injected. In order to enable this feature, the following element needs to be configured in the Spring application context:</p>

<div class="row"><div class="easyui-accordion" data-options="selected:'-1'" plain="true"><div title="Spring Configuration" style="padding:10px;"><div class="easyui-tabs" plain="true" data-options=""><div title="  Namespace " style="padding:10px"><pre><code class="language-xml">
&lt;os-core:giga-space-late-context/&gt;

&lt;os-core:embedded-space id="space" space-name="mySpace"/&gt;

&lt;os-core:giga-space id="gigaSpace" space="space"/&gt;

&lt;bean id="myService" class="eg.MyService" /&gt;
</code></pre>
</div>
<div title="  Plain XML " style="padding:10px"><pre><code class="language-xml">
&lt;bean id="gigaSpaceContext" class="org.openspaces.core.context.GigaSpaceLateContextBeanPostProcessor" /&gt;

&lt;bean id="space" class="org.openspaces.core.space.EmbeddedSpaceFactoryBean"&gt;
    &lt;property name="name" value="space" /&gt;
&lt;/bean&gt;

&lt;bean id="gigaSpace" class="org.openspaces.core.GigaSpaceFactoryBean"&gt;
    &lt;property name="space" ref="space" /&gt;
&lt;/bean&gt;

&lt;bean id="myService" class="eg.MyService" /&gt;
</code></pre>
</div>
</div>
</div>
</div></div>

<h1 id="clusterinfocontext">ClusterInfoContext</h1>

<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>

<tbody>
<tr>
<td>Attribute Annotation</td>
<td>@ClusterInfoContext</td>
</tr>

<tr>
<td>Description</td>
<td>This annotation injects cluster information into the class.</td>
</tr>
</tbody>
</table>

<div class="row"><div class="easyui-accordion" data-options="selected:'-1'" plain="true"><div title="Example" style="padding:10px;"><pre><code class="language-java">public class Process {

    @ClusterInfoContext
    ClusterInfo  clusterInfo;

    Integer instanceId = clusterInfo.getInstanceId();
}
</code></pre>
</div>
</div></div>

</body>
</html>