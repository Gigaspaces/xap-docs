<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
<head></head>
<body>
<h1>System Properties</h1>
  

<h1 id="administration">Administration</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>gs.admin.jvm.probe.details</td>
<td>Implementation of <code>JVMDetailsProbe</code>,probing the jvm, <code>JVMDetails</code> is used to return the details of the jvm such as jvm name, version vendor, start time, heap data etc.</td>
<td>SigarJVMDetailsProbe</td>
</tr>

<tr>
<td>gs.admin.jvm.probe.statistics</td>
<td>Implementation of <code>JVMStatisticsProbe</code>, provides JVM statistics</td>
<td>SigarJVMStatisticsProbe</td>
</tr>

<tr>
<td>gs.admin.os.probe.statistics</td>
<td>Implementation of <code>OSStatistics</code>, provides OS statistics such as memory and network usage.</td>
<td>SigarOSStatisticsProbe</td>
</tr>

<tr>
<td>gs.admin.os.probe.details</td>
<td>Implementation of <code>OSDetailsProbe</code>, provides OS details <code>OSDetails</code> like uid, name, architecture, version, processors number, host name and address etc.</td>
<td>SigarOSDetailsProbe</td>
</tr>
</tbody>
</table>

<h1 id="deployment">Deployment</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.home</td>
<td>XAP home directory. Not required, if not set explicitly, it is resolved</td>
<td>XAPHOME</td>
</tr>

<tr>
<td>com.gs.deploy</td>
<td>The location of the deploy directory of the GSM.</td>
<td>XAPHOME/deploy</td>
</tr>

<tr>
<td>com.gs.work</td>
<td>The location of the work directory of the GSM and GSC.</td>
<td>XAPHOME/work</td>
</tr>

<tr>
<td>com.gs.pu-common</td>
<td>The location of common classes used across multiple processing units. The libraries located within this folder loaded into each PU instance classloader (and not into the system classloader as with the <code>com.gigaspaces.lib.platform.ext</code>.</td>
<td>XAPHOME\lib\optional\pu-common</td>
</tr>

<tr>
<td>com.gigaspaces.lib.platform.ext</td>
<td>PUs shared classloader libraries folder. PU jars located within this folder loaded once into the JVM system classloader and shared between all the PU instances classloaders within the GSC. In most cases this is a better option than the com.gs.pu-common for JDBC drivers and other 3rd party libraries. This is useful option when you want multiple processing units to share the same 3rd party jar files and do not want to repackage the processing unit jar whenever one of these 3rd party jars changes.</td>
<td>XAPHOME\lib\platform\ext</td>
</tr>
</tbody>
</table>

<h1 id="security">Security</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.security.enabled</td>
<td>Security property indicating whether the GSM and GSC should be loaded in a secured mode.</td>
<td>false</td>
</tr>

<tr>
<td>com.gs.security.properties-file</td>
<td>Identifies the security properties file location</td>
<td>&lt;path/filename&gt;</td>
</tr>

<tr>
<td>com.gs.security.disable-commit-abort-authentication</td>
<td>Disable transaction authentication</td>
<td>false</td>
</tr>
</tbody>
</table>

<h1 id="change-code-without-restarts">Change code without restarts</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>space-config.remote-code.max-class-loaders</td>
<td>Limit number of class loaders (caches)</td>
<td>3</td>
</tr>

<tr>
<td>space-config.remote-code.support.code.change</td>
<td>Enable / Disable code change</td>
<td>true</td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to <a href="../dev-java/the-space-no-restart.htm">Change code without restarts</a></p>
</div>

<h1 id="pu">PU</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.pu.classloader.scala-lib-path</td>
<td></td>
<td>scala/lib</td>
</tr>

<tr>
<td>com.gs.pu.classloader.os-in-common-classloader</td>
<td></td>
<td>false</td>
</tr>
</tbody>
</table>

<h1 id="lookup-service">Lookup Service</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.sun.jini.reggie.eventTaskManager.maxThreads</td>
<td>Maximum number of threads handling event notifications</td>
<td>40</td>
</tr>

<tr>
<td>com.sun.jini.reggie.eventTaskManager.timeout</td>
<td>Idle time before a thread exits</td>
<td>1500 ms</td>
</tr>

<tr>
<td>com.sun.jini.reggie.eventTaskManager.retriesOnIdle</td>
<td>Timeout retries before a thread exits</td>
<td>10</td>
</tr>

<tr>
<td>com.sun.jini.reggie.maxEventsPerEventReg</td>
<td>Maximum number of events to keep per event registration listener</td>
<td>1500</td>
</tr>
</tbody>
</table>

<h1 id="lrmi">LRMI</h1>

<h2 id="transport">Transport</h2>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
<th>Server/Client</th>
<th>Unit</th>
<th>Override on client side</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.transport_protocol<br/>.lrmi.max-conn-pool</td>
<td>The maximum amount of connections to the space server remote services that can work simultaneously in a client connection pool. Starts with 1 connection. Defined per each remote service (by default, each remote service has 1024 maximum connections).</td>
<td>1024</td>
<td>Server</td>
<td>Connections</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.max-threads</td>
<td>XAP maintains a thread pool on the server side (at the GSC process level), that manages incoming remote requests. This parameter specifies the maximum size of this thread pool.</td>
<td>128</td>
<td>Server</td>
<td>Threads</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.min-threads</td>
<td>XAP maintains a thread pool on the server side that manages incoming remote requests. The thread pool size is increased each time with one additional thread and shrinks when existing threads are not used for 5 minutes. This parameter specifies the minimum size of this thread pool.</td>
<td>1</td>
<td>Server</td>
<td>Threads</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol.<br/>lrmi.custom.threadpool.max-threads</td>
<td>XAP maintains a thread pool on the server side that manages incoming remote requests for Task and Notification invocation. The thread pool size is increased each time with one additional thread and shrinks when existing threads are not used for 5 minutes. This parameter specifies the maximum size of this thread pool.</td>
<td>128</td>
<td>Server</td>
<td>Threads</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol.<br/>lrmi.custom.threadpool.min-threads</td>
<td>XAP maintains a thread pool on the server side that manages incoming remote requests for Task and Notification invocation. The thread pool size is increased each time with one additional thread and shrinks when existing threads are not used for 5 minutes. This parameter specifies the minimum size of this thread pool.</td>
<td>1</td>
<td>Server</td>
<td>Threads</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol.<br/>lrmi.system-priority.<br/>threadpool.max-threads</td>
<td>XAP maintains a thread pool on the server side that manages incoming remote requests for admin invocation. The thread pool size is increased each time with one additional thread and shrinks when existing threads are not used for 5 minutes. This parameter specifies the maximum size of this thread pool.</td>
<td>8</td>
<td>Server</td>
<td></td>
<td></td>
</tr>

<tr>
<td>com.gs.transport_protocol.<br/>lrmi.system-priority.<br/>threadpool.min-threads</td>
<td>XAP maintains a thread pool on the server side that manages incoming remote requests for admin invocation. The thread pool size is increased each time with one additional thread and shrinks when existing threads are not used for 5 minutes. This parameter specifies the maximum size of this thread pool.</td>
<td>1</td>
<td>Server</td>
<td></td>
<td></td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.bind-port</td>
<td>Server port used for incoming client requests, or notifications from server to client. The server port is set by default to 0, which means next free port. This means that whenever XAP is launched, it allocates one of the available ports. Define a specific port value to enforce a specific port on the space server or client side. You can define a range of ports</td>
<td>0</td>
<td>Server</td>
<td></td>
<td>No</td>
</tr>

<tr>
<td>java.rmi.server.hostname</td>
<td>Binds the XAP Server on a specified network interface. If java.rmi.server.hostname is null the system sets the localhost IP address.</td>
<td>host<br/>name</td>
<td>Client &amp; Server</td>
<td></td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.idle_conn<br/>ection_timeout</td>
<td>Watchdog idle connection timeout.</td>
<td>900</td>
<td>Client</td>
<td>Seconds</td>
<td>Yes</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.request_timeout</td>
<td>Watchdog request timeout.</td>
<td>30</td>
<td>Client</td>
<td>Seconds</td>
<td>Yes</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.inspect_timeout</td>
<td>Watchdog dummy packet connection timeout used when the watchdog suspects a request connection is blocked (com.gs.transport_protocol.lrmi.request_timeout elapsed).</td>
<td>1000</td>
<td>Client</td>
<td>millisec</td>
<td>Yes</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.threadpool.idle_timeout</td>
<td>LRMI thread pool idle timeout. Usually should be tuned for server side</td>
<td>300000</td>
<td>Server</td>
<td>millisec</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.connect_timeout</td>
<td>LRMI timeout to establish a socket connection</td>
<td>30</td>
<td>Server</td>
<td>Seconds</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.maxBufferSize</td>
<td>The NIO internal cache (a DirectByteBuffer) might cause an OutOfMemoryError due-to direct memory exhaustion. To avoid such a scenario, the LRMI layer breaks the outgoing buffer into a several chunks. By doing so, the NIO internal cache is kept small, and may not cause any error. The size of these chunks can be determined by this property</td>
<td>65536 (64k)</td>
<td>Client &amp; Server</td>
<td>Bytes</td>
<td>Yes</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.selector.threads</td>
<td>LRMI selector threads. This should be configured with multi core machines. Usualy should be tuned for server side</td>
<td>4</td>
<td>Client &amp; Server</td>
<td>Threads</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.use_async_connect</td>
<td>Use asynchronous IO to connect. The default of true should work for most systems.</td>
<td>true</td>
<td>Client &amp; Server</td>
<td>boolean</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.classloading</td>
<td>Enables LRMI dynamic class loading.</td>
<td>true</td>
<td>Server</td>
<td>boolean</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.classloading.import</td>
<td>Enables importing of classes using LRMI dynamic class loading.</td>
<td>true</td>
<td>Server</td>
<td>boolean</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.classloading.export</td>
<td>Enables exporting of classes using lrmi dynamic class loading.</td>
<td>true</td>
<td>Server</td>
<td>boolean</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.tcp-send-buffer-size</td>
<td>Set the TCP Send Buffer size (SO_SNDBUF).</td>
<td>OS default</td>
<td>Client &amp; Server</td>
<td>bytes</td>
<td>Yes</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.tcp-receive-buffer-size</td>
<td>Set the TCP receive Buffer size (SO_RCVBUF).</td>
<td>OS default</td>
<td>Client &amp; Server</td>
<td>bytes</td>
<td>Yes</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.tcp-keep-alive</td>
<td>Set the TCP keep alive mode (SO_KEEPALIVE).</td>
<td>true</td>
<td>Client &amp; Server</td>
<td>boolean</td>
<td>Yes</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.timeout_resolution</td>
<td>Resolution in percents. Timeout resolution indicates the accuracy of the request timeout.</td>
<td>10</td>
<td>Client</td>
<td>Percent</td>
<td>Yes</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.system-priority.<br/>threadpool.min-threads</td>
<td>This parameter specifies the minimum size of a thread pool used to control admin API calls</td>
<td>1</td>
<td>Server</td>
<td>Threads</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.system-priority.threadpool.max-threads</td>
<td>This parameter specifies the maximum size of a thread pool used to control admin API calls</td>
<td>8</td>
<td>Server</td>
<td>Threads</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.custom.threadpool.<br/>idle_timeout</td>
<td>Idle timeout</td>
<td>300000</td>
<td></td>
<td>millisec</td>
<td>No</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.threadpool.<br/>queue-size</td>
<td>Regualr operations thread pool queue size</td>
<td></td>
<td>2147483647</td>
<td></td>
<td>Invo<br/>cation</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.custom.threadpool.<br/>queue-size</td>
<td>Custom operations thread pool queue size</td>
<td></td>
<td>2147483647</td>
<td></td>
<td>Invo<br/>cation</td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.system-priority.<br/>threadpool.queue-size</td>
<td>System operations thread pool queue size</td>
<td></td>
<td></td>
<td>2147483647</td>
<td></td>
</tr>

<tr>
<td>com.gs.transport_protocol<br/>.lrmi.throw-resource-not-available</td>
<td>Specifies whether to throw an exception if no resources are available</td>
<td>false</td>
<td></td>
<td>Boolean</td>
<td></td>
</tr>

<tr>
<td>com.gs.lrmi.nio<br/>.selector.select-timeout</td>
<td>Set the timeout to block while waiting for a channel to become ready. 0 = block indefinitely. This value must not be negative.</td>
<td>10000</td>
<td>Client &amp; Server</td>
<td>Milliseconds</td>
<td>Yes</td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to <a href="tuning-communication-protocol.htm">Tuning the communication protocol</a></p>
</div>

<h2 id="filter">Filter</h2>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.lrmi.filter.factory</td>
<td>Factory class that is used to load communication filter.</td>
<td>empty</td>
</tr>

<tr>
<td>com.gs.lrmi.filter.security.keystore</td>
<td>Name of the keystore file that should be used by SSL communication filter.</td>
<td>empty</td>
</tr>

<tr>
<td>com.gs.lrmi.filter.security.password</td>
<td>Keystore password that should be used by SSL communication filter.</td>
<td>empty</td>
</tr>
</tbody>
</table>

<h1 id="threads-usage">Threads Usage</h1>

<table>
<thead>
<tr>
<th align="left">Thread Name</th>
<th align="left">Description</th>
<th align="left">Configuration Parameters</th>
<th align="left">Client<br/>Server</th>
</tr>
</thead>

<tbody>
<tr>
<td align="left">LRMI Selector Accept</td>
<td align="left">Responsible for accepting incoming socket connections.</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">LRMI async Selector</td>
<td align="left">Client side, handles async invocation, i.e executors, asyncRead/take.</td>
<td align="left">4 Threads</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">Pending Answers-pool</td>
<td align="left">Responsible for sending a callback to template based waiting  operations (read/take).</td>
<td align="left">space-config.engine.min_threads<br/>space-config.engine.max_threads</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">Notifier-pool</td>
<td align="left">Responsible to dispatch notification to client side. Used with the <code>Notify Container</code> <a href="../dev-java/notify-container-overview.htm">Java version</a> |<a href="../dev-dotnet/notify-container-overview.htm"> .NET version</a> and <a href="../dev-java/session-based-messaging-api.htm">Session Based Messaging API</a>. See the <a href="../dev-java/notify-container-overview.htm#Scaling Notification Delivery">Scaling Notification Delivery</a> for details.</td>
<td align="left">space-config.engine.notify_min_threads<br/>space-config.engine.notify_max_threads</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">Processor-pool</td>
<td align="left">Pool for space operations post processing that can be done asynchronously to user operation. Transaction cleanup, notifications etc.</td>
<td align="left">space-config.engine.min_threads<br/>space-config.engine.max_threads</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">Connection-pool</td>
<td align="left">Pool for regualr space operations execution.</td>
<td align="left">com.gs.transport_protocol.lrmi.max-threads <br/> com.gs.transport_protocol.lrmi.min-threads</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">Custom pool</td>
<td align="left">Pool for notify and task execution</td>
<td align="left">com.gs.transport_protocol.lrmi.custom.<br/>threadpool.min-threads<br/>com.gs.transport_protocol.lrmi.custom.<br/>threadpool.max-threads</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">System pool</td>
<td align="left">Pool for admin operations</td>
<td align="left">com.gs.transport_protocol.lrmi.system-priority.threadpool.min-threads<br/>com.gs.transport_protocol.lrmi.system-priority.threadpool.max-threads</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">SG LeaseReaper</td>
<td align="left">Used by the Service Grid</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">Template Expiration Manager Timer</td>
<td align="left">The main thread of expiration manager. Wakes up on each expiration period to find the expired templates.</td>
<td align="left">Single Thread per space</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">TemplateExpirationManager-pool#</td>
<td align="left">Responsible for sending response to waiting client when their template expires.</td>
<td align="left">16 threads max per space</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">SyncReplicationChannel SPACE_NAME</td>
<td align="left">Runs per sync replication channel</td>
<td align="left">Dynamically adjusted</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">CapabilityChannel</td>
<td align="left"></td>
<td align="left"></td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">ClassLoaderCache-<br/>SelfCleaningTable</td>
<td align="left">Used to clean up resources of class loaders once terminated (undeploy of processing unit)</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">TransactionTableHolder-SelfCleaningTable</td>
<td align="left">Responsible for cleaning zombie local transactions that were abandoned by the user application without committing. Single thread per GSC</td>
<td align="left">Single Thread per space</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">SLA Monitor Disk</td>
<td align="left">Used by the Service Grid. SLA free disk space monitor</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">Memory:writer</td>
<td align="left">Used by the Service Grid. SLA Memory monitor</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">CPU:writer</td>
<td align="left">Used by the Service Grid. SLA CPU monitor</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">pollingEventContainer#</td>
<td align="left">Used with the <a href="../dev-java/polling-container-overview.htm">Polling Container</a></td>
<td align="left">See the <a href="../dev-java/polling-container-overview.htm#Concurrent Consumers">Concurrent Consumers</a></td>
<td align="left">Client</td>
</tr>

<tr>
<td align="left">LeaseRenewalManager Task</td>
<td align="left">Respisible to review resource lease.</td>
<td align="left">One per resource</td>
<td align="left">Client</td>
</tr>

<tr>
<td align="left">JoinManager Task</td>
<td align="left">Responsible to communicate with the lookup service</td>
<td align="left">Single thread per client proxy</td>
<td align="left">Client</td>
</tr>

<tr>
<td align="left">Liveness-detector</td>
<td align="left">See the <a href="tuning-proxy-connectivity.htm">Proxy Connectivity</a> for details.</td>
<td align="left">Single thread per client proxy</td>
<td align="left">Client</td>
</tr>

<tr>
<td align="left">Liveness-monitor</td>
<td align="left">See the <a href="tuning-proxy-connectivity.htm">Proxy Connectivity</a> for details.</td>
<td align="left">Single thread per client proxy</td>
<td align="left">Client</td>
</tr>

<tr>
<td align="left">LocalTransactionManagerImpl<br/>$Reaper SPACE_NAME</td>
<td align="left">A thread that reaps expired transactions entries and other objects</td>
<td align="left">Single thread per space</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">GSPingManager</td>
<td align="left">Used by the Service Grid</td>
<td align="left"></td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">LeaseManager$Reaper SPACE_NAME</td>
<td align="left">See the <a href="../dev-java/leases-automatic-expiration.htm#Lease Manager">Lease Manager</a> for details</td>
<td align="left">Single Thread per space</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">Cache PersistentGC</td>
<td align="left">Responsible for backup activities (cleanup indexes)</td>
<td align="left">Single Thread per space</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">SPACE_NAME BackgroundFifoThread3_Notify=false#</td>
<td align="left">Threads that use segmentation in order to handle background events like handling waiting templates in a fifo fashion</td>
<td align="left">Thread pool per space</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">SPACE_NAME BackgroundFifoThread3_Notify=true#</td>
<td align="left">Threads that use segmentation in order to handle background notify events  in a fifo fashion</td>
<td align="left">Thread pool per space</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">Statistics-Task</td>
<td align="left"></td>
<td align="left"></td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">SPACE_NAME Batch Notifier</td>
<td align="left">Used when using batch notifications. See the <a href="../dev-java/notify-container-overview.htm#Batch Events">Batch Events</a> for details.</td>
<td align="left">Single Thread per space</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">ActiveFailureDetector</td>
<td align="left">Responsible for the active election process. See the <a href="troubleshooting-failure-detection.htm">Failure Detection</a> for details.</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">ProvisionLeaseManager</td>
<td align="left">Used by the Service Grid</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">Watchdog</td>
<td align="left">See the <a href="tuning-communication-protocol.htm">Communication Protocol</a> for details.</td>
<td align="left">Single Thread per proxy</td>
<td align="left">Client</td>
</tr>

<tr>
<td align="left">Scheduled System Boot Thread</td>
<td align="left">Used when the system starts</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">SLAThresholdTaskPool#</td>
<td align="left">Used by the Service Grid</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">CapabilityChannel</td>
<td align="left">Used by the Service Grid</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">DynamicSmartStub-InvHandlerCache-SelfCleaningTable$Cleaner</td>
<td align="left">Used by LRMI for background cleanup</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">ClassLoaderCache-SelfCleaningTable$Cleaner</td>
<td align="left">Used by LRMI to cleanup unused classes</td>
<td align="left">Single Thread</td>
<td align="left">Server</td>
</tr>

<tr>
<td align="left">ProvisionFailurePool#</td>
<td align="left">Used by the Service Grid. Monitors the running services</td>
<td align="left"></td>
<td align="left">Server - GSM</td>
</tr>

<tr>
<td align="left">ProvisionPool#</td>
<td align="left">Used by the Service Grid. Monitors the running services</td>
<td align="left"></td>
<td align="left">Server - GSM</td>
</tr>

<tr>
<td align="left">ProvisionMonitorEventPool#</td>
<td align="left">Used by the Service Grid. Monitors the running services</td>
<td align="left"></td>
<td align="left">Server - GSM</td>
</tr>

<tr>
<td align="left">Reggie Comm Task-pool#</td>
<td align="left">Used by the Service Grid. Monitors the running services</td>
<td align="left"></td>
<td align="left">Server - GSM</td>
</tr>

<tr>
<td align="left">SDM Cache Task</td>
<td align="left">Used by the Service Grid.</td>
<td align="left"></td>
<td align="left">Server - GSM</td>
</tr>

<tr>
<td align="left">unicast request</td>
<td align="left">Used by the Service Grid.</td>
<td align="left"></td>
<td align="left">Server - GSM</td>
</tr>

<tr>
<td align="left">service expire</td>
<td align="left">Used by the Service Grid.</td>
<td align="left"></td>
<td align="left">Server - GSM</td>
</tr>

<tr>
<td align="left">Webster Runner</td>
<td align="left">Used by the Service Grid.</td>
<td align="left"></td>
<td align="left">Server - GSM</td>
</tr>

<tr>
<td align="left">Event Lease Manager</td>
<td align="left">Used by the Service Grid.</td>
<td align="left"></td>
<td align="left">Server - GSM</td>
</tr>

<tr>
<td align="left">Fault Detection Handler</td>
<td align="left">Used by the Service Grid.</td>
<td align="left"></td>
<td align="left">Server - GSM</td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to <a href="tuning-threads-usage.htm">Threads Usage</a></p>
</div>

<h1 id="jms">JMS</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.jms.enabled</td>
<td>If true it will register the jms administrated objects in the rmi registry</td>
<td>false</td>
</tr>

<tr>
<td>com.gs.jms.compressionMinSize</td>
<td>JMS - The minimum size (in bytes) which from where we start to compress the message body. e.g. if a 1 MB Text <span class="tc-bold">JMSMessage</span> body is sent, and the <span class="tc-bold">compressionMinSize</span> value is 500000 (0.5MB) then we will compress that message body (only), otherwise we will send (write) it as is.</td>
<td>500000</td>
</tr>

<tr>
<td>com.gs.jms.iterator.buffersize</td>
<td>The iterator buffer size used for the QueueBrowser.</td>
<td>1000 objects</td>
</tr>

<tr>
<td>com.gs.jms.use_mahalo</td>
<td>If true, when JMS clients use transacted sessions the JMS transactions will use the Mahalo Jini transaction manager, which expects the manager to be started.</td>
<td>false</td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to <a href="../dev-java/messaging-support.htm">Messaging support</a></p>
</div>

<h1 id="jmx">JMX</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.jmx.enabled</td>
<td>Enable / disable JMX support.</td>
<td>true</td>
</tr>

<tr>
<td>com.gs.jmx.createJmxConnetor</td>
<td>Enable / disable the JMXConnector to connect remotely to the JMXServer with the supported protocol  (such as RMI, HTTP and so).</td>
<td>false</td>
</tr>

<tr>
<td>com.j_spaces.core.container.directory<br/>_services.jndi.url</td>
<td>The network url and port for the JMXConnector</td>
<td>service:jmx:rmi:///jndi/<br/>rmi://127.0.1.1:10098/jmxrmi</td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to <a href="space-jmx-management.htm">JMX Management</a></p>
</div>

<h1 id="dump">Dump</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.memory.create-heap-dump-on-memory-shortage</td>
<td>Turn on and off the heap dump</td>
<td>false</td>
</tr>

<tr>
<td>com.gs.memory.max-heaps-on-memory-shortage</td>
<td>Turn off heap dump after n times</td>
<td>1</td>
</tr>

<tr>
<td>com.gs.memory.heaps-on-memory-shortage-quiet-period</td>
<td>How much time to wait between heap dumps</td>
<td>24h</td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>These values can be modified using the JConsole using the <code>HeapDumpMBean</code> with ObjectName <code>org.xap:type=HeapDumpMBean</code>
Refer to <a href="space-jmx-management.htm">JMX Management</a></p>
</div>

<h1 id="multicast">Multicast</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.multicast.enabled</td>
<td>Global property allowing you to completely enable or disable multicast in the system.</td>
<td>true</td>
</tr>

<tr>
<td>com.gs.multicast.announcement</td>
<td>the multicast address that controls the lookup service announcement. The lookup service uses this address to periodically announce its existence.</td>
<td>224.0.1.188</td>
</tr>

<tr>
<td>com.gs.multicast.request</td>
<td>the multicast address that controls the request of clients (when started) to available lookup services.</td>
<td>224.0.1.187</td>
</tr>

<tr>
<td>com.gs.multicast.discoveryPort</td>
<td>the port used during discovery for multicast requests. Defaults to <span class="tc-bold">4174</span>. Note that in case the property <span class="tc-bold">com.sun.jini.reggie.initialUnicastDiscoveryPort</span> system property is not defined it is also used as the default post for unicast requests.</td>
<td>4174</td>
</tr>

<tr>
<td>com.gs.multicast.ttl</td>
<td>The multicast packet time to live.</td>
<td>3</td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to <a href="network-lookup-service-configuration.htm#multicast-settings">Multicast Settings</a></p>
</div>

<h1 id="web">Web</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gigaspaces.start.httpPort</td>
<td>Webster http port definition</td>
<td>default 0 - free port</td>
</tr>

<tr>
<td>com.gigaspaces.start.httpServerRetries</td>
<td>Webster http port retries - if the initial HTTP port is in use, tries ports between <span class="tc-bold">httpPort ..</span> and <span class="tc-bold">httpPort+(N-1)</span></td>
<td>default is <span class="tc-bold">10</span>, for example: <span class="tc-bold">initial port=1900</span> tries <span class="tc-bold">1900</span>, <span class="tc-bold">1901</span>, <span class="tc-bold">... 1909</span></td>
</tr>

<tr>
<td>com.gigaspaces.start.hostAddress</td>
<td>Webster host address.</td>
<td>default is <span class="tc-bold">localhost</span></td>
</tr>

<tr>
<td>com.gigaspaces.start.httpRoots</td>
<td>Webster root library locations.</td>
<td>Default includes XAP libraries, Jini libraries, etc.</td>
</tr>

<tr>
<td>com.gigaspaces.start.addHttpRoots</td>
<td>Additional Webster root library locations (appended to httpRoots).</td>
<td>gslib;gslibrequuired;deployroot</td>
</tr>

<tr>
<td>com.gs.browser.httpd.enabled</td>
<td>Boolean value. Setting this property to <span class="tc-bold">true</span> indicates to start a Webster HTTPD server inside the Space Browser.</td>
<td>true</td>
</tr>

<tr>
<td>com.gs.embedded-services.httpd.port</td>
<td>Indicates to start Webster HTTPD in the specified port. By default, it uses an <span class="tc-bold">9813</span> port or generated one if it is used.</td>
<td>9813</td>
</tr>
</tbody>
</table>

<h1 id="space-filter">Space Filter</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.filters.statistics.enabled</td>
<td>Enabling / disable Space filter statistics.</td>
<td>true</td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to <a href="../dev-java/the-space-filters.htm">Space Filters</a></p>
</div>

<h1 id="logging">Logging</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.logging.disabled</td>
<td>If <span class="tc-bold">true</span>, the default <span class="tc-bold">xap_logging.properties</span> file will not be loaded and none of the GS log handlers will be set to the <span class="tc-bold">LogManager</span>.</td>
<td><span class="tc-bold">false</span></td>
</tr>

<tr>
<td>com.gs.logging.debug</td>
<td>To troubleshoot and detect which logging properties file was loaded and from which location, set the following system property to <span class="tc-bold">true</span>. This property already exists in the scripts (for convenience) and by default is set to false.</td>
<td><span class="tc-bold">false</span></td>
</tr>

<tr>
<td>line.separator</td>
<td>The GS logging formatter Line separator string.  This is the value of the <span class="tc-bold">line.separator</span> property at the moment that the <span class="tc-bold">SimpleFormatter</span> was created.</td>
<td></td>
</tr>

<tr>
<td>java.util.logging.config.file</td>
<td>It indicates file path to the Java logging file location. Use it to enable finest logging troubleshooting of various GigaSpaces Services. You may control this setting via the <code>XAP_LOGS_CONFIG_FILE</code> environment variable.</td>
<td>XAPHOME\config\log\xap_logging.properties</td>
</tr>

<tr>
<td>Logging Categories</td>
<td>Refer to <a href="logging-overview.htm#logging-categories">Logging Categories</a></td>
<td></td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to <a href="logging-overview.htm">Logging</a></p>
</div>

<h1 id="debug">Debug</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.debug</td>
<td>Used in examples - benchmark , query, p2p , p2p fifo , p2p JMS, <span class="tc-bold">SimpleQueueReceiver</span>,<span class="tc-bold">SimpleQueueSender</span>, <span class="tc-bold">SimpleTopicPublisher</span>, <span class="tc-bold">SimpleTopicSubscriber</span>.</td>
<td>False</td>
</tr>
</tbody>
</table>

<h1 id="fault-detection">Fault Detection</h1>

<h1 id="space-proxy-router">Space Proxy Router</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>space-config.proxy.router.active-server-lookup-timeout</td>
<td>If an operation cannot be executed because the target member is not available, the maximum time (in milliseconds) the router is allowed to wait while searching for an active member.</td>
<td>20000</td>
</tr>

<tr>
<td>space-config.proxy.router.active-server-lookup-sampling-interval</td>
<td>The interval (in milliseconds) between active member lookup samples.</td>
<td>100</td>
</tr>

<tr>
<td>space-config.proxy.router.threadpool-size</td>
<td>Number of threads in the dedicated thread pool used by the space proxy router</td>
<td>2 * number of cores</td>
</tr>

<tr>
<td>space-config.proxy.router.load-balancer-type</td>
<td>Load balancer type to be used by the router for active-active topologies (STICKY or ROUND_ROBIN)</td>
<td>STICKY</td>
</tr>
</tbody>
</table>

<h1 id="slow-consumer">Slow Consumer</h1>

<h3 id="server-side">Server side</h3>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
<th>Unit</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.transport_protocol.lrmi.slow-consumer.enabled</td>
<td>Specify whether slow consumer protection is enabled</td>
<td>false</td>
<td></td>
</tr>

<tr>
<td>com.gs.transport_protocol.lrmi.slow-consumer.throughput</td>
<td>Specify what is the lower bound of notification network traffic consumption (in bytes) by a client which below it, is suspected as a slow consumer.</td>
<td>5000</td>
<td>bytes/second</td>
</tr>

<tr>
<td>com.gs.transport_protocol.lrmi.slow-consumer.latency</td>
<td>Specify a time period the space will evaluate a client suspected as slow consumer until it will be identified as a slow consumer. At the end of this time period, a client identified as a slow consumer will have its notification lease canceled.</td>
<td>500</td>
<td>milliseconds</td>
</tr>

<tr>
<td>com.gs.transport_protocol.lrmi.slow-consumer.retries</td>
<td>Specify the number of times within the specified latency limitation a space will retry to send notification into a client suspected as a slow consumer.</td>
<td>3</td>
<td>retries</td>
</tr>
</tbody>
</table>

<h3 id="client-side">Client side</h3>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
<th>Unit</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.transport_protocol.lrmi.threadpool.queue-size</td>
<td>specify the lrmi thread pool maximum queue size</td>
<td>Integer.MAX_VALUE</td>
<td>Notification Packets (object/batch)</td>
</tr>

<tr>
<td>com.gs.fifo_notify.queue</td>
<td>specify the fifo notifications queue size</td>
<td>Integer.MAX_VALUE</td>
<td>Notification Packets (object/batch)</td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to <a href="slow-consumer.htm">Slow consumer</a></p>
</div>

<h1 id="cluster">Cluster</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.cluster.cluster_enabled</td>
<td>Used by the space schema.</td>
<td><span class="tc-bold">false</span></td>
</tr>

<tr>
<td>com.gs.cluster.config-url</td>
<td>Used by the space schema.</td>
<td></td>
</tr>

<tr>
<td>com.gs.cluster.cache-loader.shared-data-source</td>
<td>Used by the cluster schemas for the <span class="tc-bold">CacheLoader</span>.</td>
<td></td>
</tr>

<tr>
<td>com.gs.cluster.livenessMonitorFrequency</td>
<td>Defines the frequency in which liveness of "live' members in a cluster is monitored. See <a href="troubleshooting-viewing-clustered-space-status.htm">Viewing Clustered Space Status</a> for more details.</td>
<td>10000 ms</td>
</tr>

<tr>
<td>com.gs.cluster.livenessDetectorFrequency</td>
<td>Defines the frequency in which liveness of members in a cluster is detected. See <a href="troubleshooting-viewing-clustered-space-status.htm">Viewing Clustered Space Status</a></td>
<td>5000 ms</td>
</tr>

<tr>
<td> com.gs.cluster.cache-loader.external-data-source</td>
<td>Boolean property. Must be set to <span class="tc-bold">true</span> when working with external data source</td>
<td><span class="tc-bold">false</span></td>
</tr>

<tr>
<td>com.gs.cluster.cache-loader.central-data-source</td>
<td>Boolean property. Must be set to <span class="tc-bold">true</span> when the cluster uses external data source and<br/>a central database to keep its data</td>
<td><span class="tc-bold">false</span></td>
</tr>

<tr>
<td>com.gs.cluster.url-protocol-prefix</td>
<td>Used in clustered configuration to provide same prefix for all cluster members URL 0 i.e. <span class="tc-bold">rmi:RMIRegistryMachineHostName</span>.</td>
<td>Not set by default</td>
</tr>

<tr>
<td>com.gs.clusterXML.debug</td>
<td>Boolean value. If <span class="tc-bold">true</span>, display cluster configuration when space started.</td>
<td><span class="tc-bold">False</span></td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to <a href="data-grid-clustering.htm">Data Grid Clustering</a></p>
</div>

<h1 id="replication">Replication</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.replication.disable-duplicate-filtering</td>
<td>Disables the duplication filtering mechanism used to avoid double processing of packets after recovery.</td>
<td><span class="tc-bold">false</span></td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to <a href="replication.htm">Replication</a></p>
</div>

<h1 id="space-browser">Space Browser</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.browser.containername</td>
<td>Used in browser UI to set the default SpaceURL address field. <span class="tc-bold">com.gs.browser.containername=</span> <span class="tc-bold">mySpace_container</span> controls the default container name in the Space Browser Space URL field, when the browser is started.</td>
<td></td>
</tr>

<tr>
<td>com.gs.browser.laf.isCross</td>
<td>SpaceBrowser UI Look and Feel.</td>
<td></td>
</tr>

<tr>
<td>com.gs.browser.unicast_discovery</td>
<td>Sets the Space Browser unicast discovery using <span class="tc-bold">hostname:port</span> URL. <span class="tc-bold">com.gs.browser.unicast_discovery=&lt;ip-address&gt;</span> can be used if multicast is disabled on the local machine. In such a case, the unicast protocol is used for the lookup discovery (unicast discovery is disabled by default).</td>
<td>By default it is not set</td>
</tr>
</tbody>
</table>

<h1 id="xml">XML</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.xmlschema.validation</td>
<td>Boolean value. If <span class="tc-bold">false</span>, does not validate cluster XML config schema.</td>
<td>true</td>
</tr>
</tbody>
</table>

<h1 id="transaction">Transaction</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.xa.failOnInvalidRollback</td>
<td>When set to <span class="tc-bold">false</span>, the <span class="tc-bold">XAResource</span> does not throw an error when attempting to roll back a non-existing transaction or a transaction the has already been rolled back. For more details, see <a href="http://docs.oracle.com/javase/1.5.0/docs/api/javax/transaction/xa/XAResource.htm" target="_blank" >Javadoc</a></td>
<td>true</td>
</tr>
</tbody>
</table>

<h1 id="jdbc">JDBC</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.embeddedQP.enabled</td>
<td>Boolean value. Used at JDBC driver. If <span class="tc-bold">true</span>, running query processor embedded within the application.</td>
<td><span class="tc-bold">False</span></td>
</tr>

<tr>
<td>com.gs.embeddedQP.properties</td>
<td>Used at JDBC driver. Properties file location.</td>
<td></td>
</tr>
</tbody>
</table>

<h1 id="garbage-collection">Garbage Collection</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>

<tbody>
<tr>
<td>gs.start.scheduledSystemBootTime</td>
<td>Time between 2 successive gc statistics check</td>
<td>10000 ms</td>
</tr>

<tr>
<td>gs.rmi.loaderHandlerCleaner</td>
<td>if true, the loaderHandlerCleaner.clean() method is called each gs.start.scheduledSystemBootTime time</td>
<td>True</td>
</tr>

<tr>
<td>gs.gc.collectionTimeThresholdWarning</td>
<td>When the gc takes more then this time, a warning is shown: logger.warning("Long GC collection occurred, took [" + collectionTime + "ms], breached threshold [" + gcCollectionWarning + "]");</td>
<td>60000 ms</td>
</tr>
</tbody>
</table>

<h1 id="misc">Misc</h1>

<table>
<thead>
<tr>
<th>Property name</th>
<th>Description</th>
<th>Default value</th>
</tr>
</thead>

<tbody>
<tr>
<td>com.gs.jndi.url</td>
<td>Used by the container schema.</td>
<td>localhost:10098</td>
</tr>

<tr>
<td>com.gs.protocol</td>
<td>Used by the space schema.</td>
<td>NIO</td>
</tr>

<tr>
<td>com.gs.engine.cache_policy</td>
<td>Used by the space schema.</td>
<td>1 - ALL IN CACHE</td>
</tr>

<tr>
<td>com.gs.env.report</td>
<td>Allows you to view all the runtime configuration settings.</td>
<td>false</td>
</tr>

<tr>
<td>com.gs.licensekey</td>
<td>License key string.</td>
<td></td>
</tr>

<tr>
<td>com.gs.localhost.name</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>

<div class="tc-admon-refer">
  
  <p>Refer to the <a href="[%=Links.ApiJavaDoc%]/com/j_spaces/kernel/SystemProperties.htm">SystemProperties</a> class for more details.</p>
</div>

</body>
</html>