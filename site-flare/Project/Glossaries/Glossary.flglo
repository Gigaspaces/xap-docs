<?xml version="1.0" encoding="utf-8"?>
<CatapultGlossary>
  <GlossaryEntry
    glossTerm="Glossary.Term0"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>CDC</Term>
    </Terms>
    <Definition
      Link="">Change Data Capture. Primarily used for data that is frequently updated, such as user transactions</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term1"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>IMDG</Term>
    </Terms>
    <Definition
      Link="">In-Memory Data Grid.
A set of Space instances, typically running within their respective processing unit instances. The space instances are connected to each other to form a space cluster. The relations between the spaces define the data grid topology. Also known as Enterprise Data Grid - EDG</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term2"
    Stem=""
    IgnoreCase="false"
    TermClass="Popup">
    <Terms>
      <Term>Kubernetes</Term>
    </Terms>
    <Definition
      Link="">An open-source container orchestration system for automating software deployment, scaling, and management.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term3"
    TermClass="Popup"
    Stem=""
    IgnoreCase="true">
    <Terms>
      <Term>Tiered Storage</Term>
    </Terms>
    <Definition
      Link="">Automatically assigns data to different categories of storage types based on considerations of cost, performance, availability, and recovery.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term4"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>JDBC</Term>
    </Terms>
    <Definition
      Link="">Java DataBase Connectivity.
This is an application programming interface (API) for the Java programming language, which defines how a client may access a database.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term5"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>ODBC</Term>
    </Terms>
    <Definition
      Link="">Microsoft Open DataBase Connectivity.
This interface is a C programming language interface that makes it possible for applications to access data from a variety of database management systems (DBMSs). ODBC is a low-level, high-performance interface that is designed specifically for relational data stores.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term6"
    Stem=""
    IgnoreCase="false"
    TermClass="Popup">
    <Terms>
      <Term>DIH</Term>
    </Terms>
    <Definition
      Link="">Digital Integration Hub.
An application architecture that decouples digital applications from the systems of record, and aggregates operational data into a low-latency data fabric.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term7"
    Stem=""
    IgnoreCase="false"
    TermClass="Popup">
    <Terms>
      <Term>ACID</Term>
    </Terms>
    <Definition
      Link="">In the context of databases and data storage systems, a transaction is any operation that is treated as a single unit of work, which either completes fully or does not complete at all, and leaves the storage system in a consistent state.
ACID is an acronym that refers to the set of 4 key properties that define a transaction: Atomicity, Consistency, Isolation, and Durability. If a database operation has these ACID properties, it can be called an ACID transaction.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term8"
    Stem=""
    IgnoreCase="false"
    TermClass="Popup">
    <Terms>
      <Term>BI</Term>
    </Terms>
    <Definition
      Link="">Business intelligence (BI) is software that ingests business data and presents it in user-friendly views such as reports, dashboards, charts and graphs.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term9"
    TermClass="Popup"
    Stem=""
    IgnoreCase="true">
    <Terms>
      <Term>Blueprint</Term>
    </Terms>
    <Definition
      Link="">Java project templating framework provided by DIH for developers, a bueprint, or class, contains a set of attributes and behaviors that define an object.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term10"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>CRUD</Term>
    </Terms>
    <Definition
      Link="">Create, Read, Update, Delete.
These terms describe the four essential operations for creating and managing persistent data elements, mainly in relational and NoSQL databases.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term11"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>DDL</Term>
    </Terms>
    <Definition
      Link="">Data Definition Language (DDL) is a subset of SQL. It is a language for describing data and its relationships in a database. DDL changes the structure of the table like creating a table, deleting a table, altering a table, etc. Example DDL commands: CREATE, ALTER, DROP, TRUNCATE.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term12"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Data Integration</Term>
      <Term>DI</Term>
    </Terms>
    <Definition
      Link="">The Data Integration (DI) layer is a vital part of the Digital Integration Hub (DIH) platform. It is responsible for a wide range of data integration tasks such as ingesting data in batches or streaming data changes. This is performed in real-time from various sources and systems of record (SOR. The data then resides in the In-Memory Data Grid (IMDG), or Space, of the GigaSpaces Smart DIH platform.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term13"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>EDA</Term>
    </Terms>
    <Definition
      Link="">Event Driven Architecture.
An event-driven architecture uses events to trigger and communicate between decoupled services and is common in modern applications built with microservices.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term14"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>ETL</Term>
    </Terms>
    <Definition
      Link="">Extract, Transform, Load
The process of combining data from multiple sources into a large, central repository. In GigaSpaces this is the Space.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term15"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Flink</Term>
    </Terms>
    <Definition
      Link="">Apache Flink is an open-source, unified stream-processing and batch-processing framework developed by the Apache Software Foundation. The core of Apache Flink is a distributed streaming data-flow engine written in Java and Scala. Flink executes arbitrary dataflow programs in a data-parallel and pipelined manner.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term16"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Grafana</Term>
    </Terms>
    <Definition
      Link="">Grafana is a multi-platform open source analytics and interactive visualization web application. It provides charts, graphs, and alerts for the web when connected to supported data sources.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term17"
    Stem=""
    IgnoreCase="false"
    TermClass="Popup">
    <Terms>
      <Term>GSC</Term>
    </Terms>
    <Definition
      Link="">Grid Service Container.
This provides an isolated runtime for one (or more) processing unit (PU) instance and exposes its state to the GSM.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term18"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>GSM</Term>
    </Terms>
    <Definition
      Link="">Grid Service Manager.
This is is a service grid component that manages a set of Grid Service Containers (GSCs). A GSM has an API for deploying/undeploying Processing Units. When a GSM is instructed to deploy a Processing Unit, it finds an appropriate, available GSC and tells that GSC to run an instance of that Processing Unit. It then continuously monitors that Processing Unit instance to verify that it is alive, and that the SLA is not breached.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term19"
    Stem=""
    IgnoreCase="false"
    TermClass="Popup">
    <Terms>
      <Term>GSA</Term>
    </Terms>
    <Definition
      Link="">Grid Service Agent.
This is a process manager that can spawn and manage Service Grid processes (Operating System level processes) such as The Grid Service Manager, The Grid Service Container, and The Lookup Service. Typically, the GSA is started with the hosting machine's startup. Using the agent, you can bootstrap the entire cluster very easily, and start and stop additional GSCs, GSMs and lookup services at will.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term20"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Hot Tier</Term>
    </Terms>
    <Definition
      Link="">Part of GigaSpaces Tiered Storage Mechanism. Hot Tier is RAM and is used for priority data and read/write operations that require the fasted access</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term21"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>HELM</Term>
    </Terms>
    <Definition
      Link="">Helm helps you manage Kubernetes applications — Helm Charts help you define, install, and upgrade even the most complex Kubernetes application.Helm uses a packaging format called charts. A chart is a collection of files that describe a related set of Kubernetes resources.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term22"
    Stem=""
    IgnoreCase="false"
    TermClass="Popup">
    <Terms>
      <Term>IDE</Term>
    </Terms>
    <Definition
      Link="">Integrated Development Environment.
A software application that helps programmers develop software code efficiently. It increases developer productivity by combining capabilities such as software editing, building, testing, and packaging in an easy-to-use application. Example: DBeaver.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term23"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>IIDR</Term>
    </Terms>
    <Definition
      Link="">IBM Infosphere Data Replication.
This is a solution to efficiently capture and replicate data, and changes made to the data, on relational source systems. Used to move data from DataBases to the In-Memory Data Grid.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term24"
    Stem=""
    IgnoreCase="false"
    TermClass="Popup">
    <Terms>
      <Term>Kafka</Term>
    </Terms>
    <Definition
      Link="">Apache Kafka is a distributed event store and stream-processing platform. Apache Kafka is a distributed publish-subscribe messaging system.
A message is any kind of information that is sent from a producer (application that sends the messages) to a consumer (application that receives the messages).
Producers write their messages or data to Kafka topics. These topics are divided into partitions that function like logs. 
Each message is written to a partition and has a unique offset, or identifier. Consumers can specify a particular offset point where they can begin to read messages.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term25"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>LDAP</Term>
    </Terms>
    <Definition
      Link="">Lightweight Directory Access Protocol.
An open, vendor-neutral, industry standard application protocol for accessing and maintaining distributed directory information services over an Internet Protocol (IP) network.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term26"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>LRU</Term>
    </Terms>
    <Definition
      Link="">Last Recently Used.
This is a common caching strategy. It defines the policy to evict elements from the cache to make room for new elements when the cache is full, meaning it discards the least recently used items first.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term27"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>LUS</Term>
    </Terms>
    <Definition
      Link="">Lookup Service.
This service provides a mechanism for services to discover each other. Each service can query the lookup service for other services, and register itself in the lookup service so other services may find it.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term28"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Mirror</Term>
    </Terms>
    <Definition
      Link="">Performs the replication of changes to the target table or accumulation of source table changes used to replicate changes to the target table at a later time. If you have implemented bidirectional replication in your environment, mirroring can occur to and from both the source and target tables.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term29"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Multi-Region Replication</Term>
    </Terms>
    <Definition
      Link="">This is a deployment topology that enables system continuity, by replicating states between various geographical locations. It is commonly used for: Disaster recover planning, failover, maintaining data locaility per site and adding or removing sites without a system shutdown.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term30"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>MVCC</Term>
    </Terms>
    <Definition
      Link="">Multiversion Concurrency Control.
This is a database optimization technique that creates duplicate copies of records so that data can be safely read and updated at the same time.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term31"
    TermClass="Popup"
    Stem=""
    IgnoreCase="true">
    <Terms>
      <Term>Orchestration</Term>
    </Terms>
    <Definition
      Link="">This is the automated configuration, management, and coordination of computer systems, applications, and services. Orchestration strings together multiple tasks in order to execute and easily manage a larger workflow or process. These processes can consist of multiple complex tasks that are automated and can involve multiple systems. Kubernetes, used by GigaSpaces, is a popular open source platform for container orchestration.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term32"
    TermClass="Popup"
    Stem="True"
    IgnoreCase="false">
    <Terms>
      <Term>Processing Unit</Term>
      <Term>PU</Term>
    </Terms>
    <Definition
      Link="">This is the unit of packaging and deployment in the GigaSpaces Data Grid, and is essentially the main GigaSpaces service. The Processing Unit (PU) itself is typically deployed onto the Service Grid. When a Processing Unit is deployed, a Processing Unit instance is the actual runtime entity.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term33"
    TermClass="Popup"
    Stem="True"
    IgnoreCase="false">
    <Terms>
      <Term>REST API</Term>
      <Term>REST</Term>
    </Terms>
    <Definition
      Link="">REpresentational State Transfer. Application Programming Interface
An API, or application programming interface, is a set of rules that define how applications or devices can connect to and communicate with each other. A REST API is an API that conforms to the design principles of the REST, or representational state transfer architectural style.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term34"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>SBA</Term>
    </Terms>
    <Definition
      Link="">Space-Based Architecture.
This architecture implementation is a set of Processing Units, with the following properties: Each processing unit instances holds a partitioned space instance and one or more services that are registered on events on that specific partition. Together they form an application cluster. Utlized by Utilized GigaSpaces cloud-native IMDG.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term35"
    TermClass="Popup"
    Stem=""
    IgnoreCase="true">
    <Terms>
      <Term>Service Bean</Term>
    </Terms>
    <Definition
      Link="">An application component that interacts with the space (using the read, write, take and notify operations), and implements a certain functionality.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term36"
    Stem=""
    IgnoreCase="false"
    TermClass="Popup">
    <Terms>
      <Term>Space</Term>
    </Terms>
    <Definition
      Link="">Where GigaSpaces data is stored. It is the logical cache that holds data objects in memory and might also hold them in layered in tiering. Data is hosted from multiple SoRs, consolidated as a unified data model.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term37"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>SpaceDeck</Term>
    </Terms>
    <Definition
      Link="">GigaSpaces intuitive, streamlined user interface to set up,  manage and control their environment. Using SpaceDeck, users can define the tools to bring legacy System of Record (SoR) databases into the in-memory data grid that is the core of the GigaSpaces system.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term38"
    TermClass="Popup"
    Stem=""
    IgnoreCase="true">
    <Terms>
      <Term>Warm Tier</Term>
    </Terms>
    <Definition
      Link="">Part of GigaSpaces Tiered Storage Mechanism. Warm tier is SSD (recommended media) storage which is mostly used for data that is read-only and is less frequently used.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term39"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>MemoryXtend</Term>
    </Terms>
    <Definition
      Link="">Related to Data Tiering. The MemoryXtend (blobstore) storage model allows an external storage medium (one that does not reside on the JVM heap) to store the GigaSpaces Space data and is designed for operational workloads. It keeps all indexes in RAM for better performance.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term40"
    TermClass="Popup"
    Stem=""
    IgnoreCase="true">
    <Terms>
      <Term>Routing</Term>
    </Terms>
    <Definition
      Link="">The mechanism that is in charge of routing the objects into and out of the corresponding partitions. The routing is based on a designated attribute inside the objects that are written to the Space, called the Routing Index.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term41"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Service Grid</Term>
    </Terms>
    <Definition
      Link="">A built-in orchestration tool which contains a set of Grid Service Containers (GSCs) managed by a Grid Service Manager. The containers host various deployments of Processing Units and data grids. Each container can be run on a separate physical machine.  This orchestration is available for Smart Cache only. For Smart DIH, we recommend using our Kubernetes orchestration.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term44"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false"
    conditions="Default.DoNotShow">
    <Terms>
      <Term>Service</Term>
    </Terms>
    <Definition
      Link="">A service performs operations with the underlying data. There are several types of Services:
1) Stateful PU/Service - space containing data and also might embed services related to that space's data.
2) Stateless PU/Service - There are built-in services as mirror wan-GW, data-GW. In addition, there are custom services which are customer driven.
3) Client Services - applications that interact with spaces.  In Smart DIH these include low-code micro services.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term45"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>FIFO</Term>
    </Terms>
    <Definition
      Link="">FIFO is an acronym for first in, first out, a method for organizing the manipulation of a data structure where the oldest entry, or "head" of the queue, is processed first.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term46"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>POJO</Term>
    </Terms>
    <Definition
      Link="">Plain Old Java Object.
A regular Java object with no special restrictions other than those forced by the Java Language Specification and does not require any classpath.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term47"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Quiesce Mode</Term>
    </Terms>
    <Definition
      Link="">This feature adds support for "Quiesce state" (or maintenance mode) for a Processing Unit. If a space is quiesced, it rejects all data-related operations with an exception, allowing the user to perform maintenance operations.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term48"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>DML</Term>
    </Terms>
    <Definition
      Link="">Data Manipulation Syntax. 
The DML commands in Structured Query Language change the data present in the SQL database. We can easily access, store, modify, update and delete the existing records from the database using DML commands. DML commands are used to modify the database. It is responsible for all form of changes in the database. Four main commands: SELECT, INSERT, UPDATE and DELETE.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term49"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>TCL</Term>
    </Terms>
    <Definition
      Link="">Transaction Control Language Syntax. TCL commands are basically used for managing and controlling the transactions in a database to maintain consistency. And it also helps a user manage all the changes made by the DML commands for maintaining its transactions.TCL commands can only be used with DML commands like INSERT, DELETE and UPDATE only.  Examples of TCL Commands: COMMIT, ROLLBACK, SAVEPOINT.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term50"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>DQL</Term>
    </Terms>
    <Definition
      Link="">Data Query Language Syntax. DQL statements are used for performing queries on the data within schema objects. The purpose of the DQL Command is to get some schema relation based on the query passed to it. We can define DQL as follows: It is a component of SQL statement that allows getting data from the database and imposing order upon it. It has a single command: select and subcategories of DDL, DML, DCL and TCL.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term51"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>SOR</Term>
    </Terms>
    <Definition
      Link="">System of Record. This is an information storage and retrieval system that stores valuable data on an organizational system or process. This record can contain multiple data sources and exist at a single location or multiple locations with remote access.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term52"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>JVM</Term>
    </Terms>
    <Definition
      Link="">Java Virtual Machine. A virtual machine that enables a computer to run Java programs as well as programs written in other languages that are also compiled to Java bytecode.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term53"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Zookeeper</Term>
    </Terms>
    <Definition
      Link="">Apache Zookeeper. An open-source server for highly reliable distributed coordination of cloud applications. It provides a centralized service for providing configuration information, naming, synchronization and group services over large clusters in distributed systems. The goal is to make these systems easier to manage with improved, more reliable propagation of changes.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term42"
    TermClass="Popup"
    Stem=""
    IgnoreCase="true">
    <Terms>
      <Term>Affinity</Term>
    </Terms>
    <Definition
      Link="">This describes the relationship between VMs and hosts or in Kubernetes between pods.  Affinity will keep VM and hosts together and with Kubernetes, will keep pods on the same node.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term43"
    TermClass="Popup"
    Stem=""
    IgnoreCase="true">
    <Terms>
      <Term>Anti-Affinity</Term>
    </Terms>
    <Definition
      Link="">This describes the relationship between VMs and hosts or when related to Kubernetes between pods.  Anti-Affinity will keep VM and hosts separated and using Kubernetes an anti-affinity rule tells the scheduler not to place the new pod on the same node if the label on the new pod matches the label on another pod. In this case, anti-affinity allows you to keep pods away from each other. It also allows you to prevent pods of a particular service from scheduling on the same nodes as pods of another service that are known to interfere with the performance of the pods of the first service.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term54"
    TermClass="Hyperlink"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Smart Cache</Term>
    </Terms>
    <Definition
      Link="/Content/new-content/SmartCache-Overview.html"></Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term55"
    TermClass="Hyperlink"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Smart DIH</Term>
    </Terms>
    <Definition
      Link="/Content/new-content/SmartDIH-Overview.htm"></Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term56"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>Swagger UI</Term>
    </Terms>
    <Definition
      Link="">Swagger UI allows development team to visualize and interact with the API's resources without having any of the implementation logic in place.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term57"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>RBAC</Term>
    </Terms>
    <Definition
      Link="">Role-based access control (RBAC), also known as role-based security, is a mechanism that restricts system access. It involves setting permissions and privileges to enable access to authorized users.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term58"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>SSO</Term>
    </Terms>
    <Definition
      Link="">Single sign-on (SSO) is an authentication scheme that allows a user to log in with a single ID to any of several related, yet independent, software systems.</Definition>
  </GlossaryEntry>
  <GlossaryEntry
    glossTerm="Glossary.Term59"
    TermClass="Popup"
    Stem=""
    IgnoreCase="false">
    <Terms>
      <Term>IDP</Term>
    </Terms>
    <Definition
      Link="">An identity provider, or IDD, stores and manages users' digital identities. IDP and SSO can work together to authenticate users.</Definition>
  </GlossaryEntry>
</CatapultGlossary>