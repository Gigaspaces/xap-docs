---
type: post122
title:  Space Object ID
categories: XAP122
parent: modeling-your-data.html
weight: 100
---

{{% ssummary %}} {{% /ssummary %}}

# How Space Object ID is Generated?

You can insert an object into the space using the `write()` and `writeMultiple()` methods. When a new object is inserted into the space, it embeds a unique ID - called the UID. The UID can be generated explicitly by the client using a unique value generated by the application business logic or using a sequencer running within the space.

The space UID for space object can be created in three different ways:

- When a space object has no `SpaceId` property declared, the space generates a UID for the object.
- When a space object has a property which is declared as `SpaceId` and marked as `auto-generate=false`, the UID is generated based on the value of the ID field the user is setting.
- When a space object has a property which is declared as `SpaceId` and marked as `auto-generate=true`, the UID is generated by the space and placed back into the field using the relevant setter method. In this case, the field must be a `java.lang.String` type.




# The SpaceId Field content

- When a space Class has no `SpaceId` property declared, it will be returned without any ID. This means that **update operations cannot be executed** on the space Class. Only the `read()` and `write()` methods can be executed.
- When a space Class has a property which is declared as `SpaceId` and `auto-generate=true` and its value is `null`, the `SpaceId` field will store the ID.
- When a space Class has a property which is declared as `SpaceId` and `auto-generate=true` and its value is not null, the `SpaceId` field will store the original value stored within the `SpaceId` field.
- When a space Class has a property which is declared as `SpaceId` and `auto-generate=false`, the `SpaceId` field will store the original value stored within the `SpaceId` field used to generate the UID.

# Compound SpaceId

You might need to construct an ID that will be comprised from a user defined Object rather than using a Numeric or String type field. In such a case your user defined class used as the `SpaceId` data type must implement the `toString` , `hashCode` and `equals` methods.

{{% note %}} The compound ID class must implement a `toString` method that return a unique String for each ID. {{%/note%}}

See below example:

{{%tabs%}}
{{%tab "  The CompoundId "%}}


```java
import java.io.Serializable;

public class CompoundId implements Serializable{
	public String key1;
	public String key2;
	public String key3;

	public String toString()
	{
		return key1+ "_" + key2+ "_" + key3;
	}

	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((key1 == null) ? 0 : key1.hashCode());
		result = prime * result + ((key2 == null) ? 0 : key2.hashCode());
		result = prime * result + ((key3 == null) ? 0 : key3.hashCode());
		return result;
	}

	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof CompoundId)) 
			return false;
		CompoundId other = (CompoundId) obj;
		if (key1 == null) {
			if (other.key1 != null)
				return false;
		} else if (!key1.equals(other.key1))
			return false;
		if (key2 == null) {
			if (other.key2 != null)
				return false;
		} else if (!key2.equals(other.key2))
			return false;
		if (key3 == null) {
			if (other.key3 != null)
				return false;
		} else if (!key3.equals(other.key3))
			return false;
		return true;
	}

}
```

{{% /tab %}}

{{%tab "  The Space Class "%}}


```java
import com.gigaspaces.annotation.pojo.SpaceClass;
import com.gigaspaces.annotation.pojo.SpaceId;

@SpaceClass
public class MySpaceClass {
	CompoundId id;
	String data;

	@SpaceId(autoGenerate = false)
	public CompoundId getId() {
		return id;
	}

	public void setId(CompoundId id) {
		this.id = id;
	}
	public String getData() {
		return data;
	}

	public void setData(String data) {
		this.data = data;
	}

	public String toString() {
		return "ID:" + id + " Data:"+ data;
	}
}
```

{{% /tab %}}
{{%tab "  The Application Code "%}}


```java
GigaSpace space = new GigaSpaceConfigurer (new SpaceProxyConfigurer("space")).gigaSpace();

CompoundId id = new CompoundId();
id.key1="1";
id.key2="2";
id.key3="3";

MySpaceClass obj = new MySpaceClass();
obj.setData("AAAAAAAAA");
obj.setId(id);

space.write(obj);

MySpaceClass ret = space.readById(MySpaceClass.class, id);
```

{{% /tab %}}
{{% /tabs %}}


{{% refer %}}
See the [Global ID Generator](/sbp/global-id-generator.html) for a generic ID generator service you may use with your application.
To learn how to read space entries by ID see [ID Queries](./query-by-id.html).
{{% /refer %}}
