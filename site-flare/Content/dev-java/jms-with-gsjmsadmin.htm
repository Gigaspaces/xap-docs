<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
<head></head>
<body>
<h1>Working with GSJMSAdmin</h1>
  

<p>The <code>GSJMSAdmin</code> class is offered by GigaSpaces to simplify the obtaining of JMS resources. You can use this class to work with or without JNDI.</p>

<h1 id="obtaining-resources-with-gsjmsadmin-without-using-jndi">Obtaining Resources with GSJMSAdmin without Using JNDI</h1>

<p>The following methods create connection factories to work against a space specified as a URL or a proxy.</p>

<p><code>GSJMSAdmin</code> caches the created factories, so the same factory is returned for multiple invocation of methods to the same space.</p>

<pre><code class="language-java">ConnectionFactory getConnectionFactory(String spaceURL)
ConnectionFactory getConnectionFactory(IJSpace space)
QueueConnectionFactory getQueueConnectionFactory(String spaceURL)
QueueConnectionFactory getQueueConnectionFactory(IJSpace space)
TopicConnectionFactory getTopicConnectionFactory(String spaceURL)
TopicConnectionFactory getTopicConnectionFactory(IJSpace space)
</code></pre>

<p>For example, to get a connection factory to <code>mySpace</code>:</p>

<pre><code class="language-java">GSJMSAdmin admin = GSJMSAdmin.getInstance();
String url="jini://myhost:myport/mySpace_container/mySpace;jini://myhost/./mySpace";
ConnectionFactory factory = admin.getConnectionfactory(url); // or a proxy
</code></pre>

<div class="tc-admon-note">
  <p class="tc-admon-title">Using the following space URL:</p>
  <p><code>jini://myhost:myport/myJMSSpace_container/myJMSSpace;jini://myhost/./myJMSSpace</code> combines two separate Jini Lookup Services avoiding <span class="tc-bold">Single Point of Failure</span>.</p>
</div>

<p>The following methods return a cached instance of a destination, or a new instance if no instance exists.</p>

<pre><code class="language-java">Queue getQueue(String name)
Topic getTopic(String name)
</code></pre>

<p>For example, to get the Topic <code>myTopic</code>:</p>

<pre><code class="language-java">GSJMSAdmin admin = GSJMSAdmin.getInstance();
Topic topic = admin.getTopic(myTopic);
</code></pre>

<h1 id="obtaining-resources-with-gsjmsadmin-using-jndi">Obtaining Resources with GSJMSAdmin Using JNDI</h1>

<p>You can use <code>GSJMSAdmin</code> to look up JMS resources in JNDI.</p>

<pre><code class="language-java">Object jndiLookup(String name)
</code></pre>

<p>For example, to obtain the Topic <code>MyTopic</code>:</p>

<pre><code class="language-java">GSJMSAdmin admin = GSJMSAdmin.getInstance();
Topic topic = admin.jndiLookup("GigaSpaces;ContainerName;spaceName;jms;destinations;MyTopic")
</code></pre>

<div class="tc-admon-note">
  
  <p>The name used to look for the resource is the full binding name.</p>
</div>

</body>
</html>