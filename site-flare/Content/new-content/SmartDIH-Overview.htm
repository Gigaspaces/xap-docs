<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1 class="tc-pagetitle" style="text-align: left;">Smart DIH </h1>
        <MadCap:snippetBlock src="../Resources/Snippets/gs-banner.flsnp" />Smart DIH is an operational data hub designed to address IT challenges of supporting modern, digital applications over heterogeneous, mostly legacy data  architectures. By creating an event-driven, highly performant and highly available replica of the data from multiple systems and applications, Smart DIH allows enterprises to develop and deploy digital services in an agile manner, without disturbing core business applications. Strategic initiatives such as integration data hub, digital innovation over legacy systems, API scaling, cloud migration, and business 360 are common <a href="https://www.gigaspaces.com/use-cases">use cases</a> for which Smart DIH is utilized.<p>&#160;</p><p>The Smart DIH conceptual architecture can be illustrated as follows:</p><p><img src="../Resources/Images/Product/Marchitecture_Feb. '23.png" style="width: 1282px;height: 586px;" /></p><h3><span style="color: #000000; background-color: #f5f5f5;">Integrate</span> </h3><p>The <a href="../landing-pages/AO-DataIntegration.htm">Data Integration</a> (DI) module enables the event-driven replication of data from source systems to the Smart DIH. Built-in <a href="../Data Integration/DI-Architecture.html">Changed Data Capture</a> (CDC) connectors enable streaming of data from common databases, through <a href="../spacedeck/spacedeck-data-pipeline-overview.html">no-code data pipelines</a>. Aside from enabling connectivity, the data pipelines are designed to support metadata change and recovery scenarios in a way that reduces or even eliminates service downtime.</p><h3><span style="color: #9fd411;"><span style="color: #000000; background-color: #f5f5f5;">Host </span></span></h3><p>The replicated data is hosted on a highly available, distributed <a href="../overview/the-in-memory-data-grid.html">in-memory data grid</a> (IMDG), making the data highly available to the consuming applications, regardless of the availability of any of the source systems. An IMDG instance used for hosting the data is called a Space. A Space is an object store and is rich with additional functionalities, yet for simplicity, a Space can be thought of as the equivalent of a database schema. As such, it stores the data in Object Types, also known as Space Types. A Space Type is the equivalent of a Space for a table in a database. A Space may be fully deployed to memory, as is the default configuration. For cost considerations, enterprises may take advantage of the Space’s <a href="../dev-java/intelligent-tiering-intro.html">tiered storage</a> configuration, allowing the persistence of data to SSD, while caching only the business-critical data to memory. It is important to note that the logic of caching to memory in a tiered storage configuration is consistent, as it is based on business rules.</p><h3><span style="color: #000000; background-color: #f5f5f5;">Digitize</span> </h3><p>Making data available to consuming applications is accomplished via data access services, exposing either APIs and/or events. Smart DIH provides low-code tooling for creating and deploying such services, among which are tools to create an <a href="../spacedeck/spacedeck-services.html">SQL-based service</a>. SQL is also the vehicle through which external SQL tools such as <a href="../dev-java/insightedge-apis.html">BI</a>, ETL and database applications can interact with the Smart DIH, via its <a href="../dev-java/sql-queries.html">clientless JDBC / ODBC connector</a>.</p><p>Regardless of the method chosen to access the data, having it all being served over the Smart DIH simplifies the service development process. In practice, it may be either that data of different domains is replicated to the same Space or that multiple Spaces are being utilized, each as a replica of a different data domain. The latter configuration is mostly used when the desire is to keep data ownership and control at the LoB level (e.g. in accordance with Kappa architecture and the Data Mesh principles), even when centralizing the data for common usage.</p><h3><span style="color: #000000; background-color: #f5f5f5;">Deployment</span></h3><p>Smart DIH may be <a href="../admin/smart-dih-with-kubernetes-overview.html">deployed</a> on-prem or in the cloud. Hybrid on-prem / cloud deployment topologies are common when at least some of the source systems run on-premise. As a cloud native and also cloud agnostic technology, Smart DIH can be deployed in any combination of on-prem / cloud / multi-cloud distribution, while keeping its instances fully synchronized, using its <a href="../admin/kubernetes-s40-multiple-instances-of-data-gateway.html">WAN Gateway module</a>.</p><p>&#160;</p><div class="tc-admon-note"><p>For more information about Smart DIH visit our <a href="../landing-pages/architectural-overview.htm">Architectural Overview</a> pages</p></div><p>&#160;</p></body>
</html>