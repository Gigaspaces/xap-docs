<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <body>
        <h1>Deploying the <MadCap:variable name="General.ProductNameXAP" /> Services</h1>
        <p>After your cluster is up and running, you can deploy <MadCap:variable name="General.ProductNameXAP" /> services and microservices. The gsctl utility supports deploying stateful, stateless, and web services. The default service type is stateless.</p>
        <p>The gsctl tool comes with sample feeder (stateful) and processor (stateless) services in the Services folder. You must use the default artifact repository when deploying the sample services. </p>
        <div class="tc-admon-note">
            <p>For more information about the artifact repository, see the <MadCap:xref href="../../../../orchestration/gsctl-manage-product-version.html">Managing the [%=General.ProductNameXAP%] Product Version</MadCap:xref> topic.</p>
        </div>
        <p class="tc-todo">To deploy the sample <MadCap:variable name="General.ProductNameXAP" /> services:</p>
        <ol>
            <li>
                <p>When deploying the sample services, you should first deploy the processor service . As this is a stateful service, you need to specify both the service type and service name. Type the following command to deploy a processor service called <span class="tc-bold">mySpace</span>:</p><pre><code class="language-bash">deploy --type=stateful mySpace data-processor.jar</code></pre>
            </li>
            <li>
                <p>Next, deploy the feeder service. As this is a stateless service, you only have to specify the service name. Type the following command to deploy a feeder service called <span class="tc-bold">myFeeder</span>:</p><pre><code>deploy --type=stateless myFeeder data-feeder.jar</code></pre>
            </li>
        </ol>
    </body>
</html>