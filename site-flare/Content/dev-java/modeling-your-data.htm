<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
<head></head>
<body>
<h1>XAP Data Modeling</h1>
  <p>XAP Data Modeling for objects that are used to interact with the Space has the following features:</p>

<ul>
<li><a href="space-object-id-operations.htm">Space Object ID</a> - When a new object is inserted into the Space, it embeds a unique ID (called the UID). The UID can be  generated explicitly  by the client using a unique value generated by the application business logic, or using a sequencer running within the Space.</li>
<li><a href="pojo-annotation-overview.htm">Annotation-based metadata</a> - The XAP API supports class and property decorations with POJOs. These can be specified via annotations on the Space class source itself. You can define common behavior for all class instances, and specific behavior for class fields.</li>
<li><a href="pojo-xml-metadata-overview.htm">XML-based metadata</a> - Class and property decorations for POJOs can be specified via an external XML file, accompanied with the class byte code files located within the JAR/WAR. You can define common behavior for all class instances, and specific behavior for class fields.</li>
<li><a href="storage-types-controlling-serialization.htm">Storage type</a> - To reduce the memory footprint of the objects stored in a Space, different storage types can be defined for individual properties of a Space class. Object properties can be assigned a storage type decoration, which determines how it is serialized and stored in the Space.</li>
<li><a href="custom-serialization.htm">Custom Serialization</a> - You can control the serialization of embedded properties.</li>
<li><a href="routing-in-partitioned-spaces.htm">Routing property</a> - A partitioned Space enables performing Space operations against multiple Spaces transparently from a single proxy. The primary goal of the partitioned Space is to provide unlimited in-memory Space storage size, and group objects into the same partition to speed up performance. The initial intention is to write data into the partitioned Space, and route query operations based on the template data. In order to do this, a routing property can be defined on the entry type.</li>
</ul>

</body>
</html>