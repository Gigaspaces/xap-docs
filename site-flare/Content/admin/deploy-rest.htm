<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
<head></head>
<body>
<h1>Deploy with REST</h1>
  

<h1 id="deploy-resource">deploy resource</h1>

<h2 id="syntax">Syntax</h2>

<pre><code class="language-bash">curl -X POST [name] [resource jar/war/zip file / directory location / name] [url/deployments]
</code></pre>

<h2 id="description">Description</h2>

<p>A resource (Processing Unit) can be easily deployed onto the Service Grid. In order to deploy a resource, the Processing Unit must follow the <a href="../dev-java/the-processing-unit-structure-and-configuration.htm/">processing unit directory structure</a>.
Before deploying the processing unit you will need to jar it and then specify that jar file as the resource to the <code>POST</code> command. The deployment process will upload the jar file to all the GSMs it finds and unpack it under the <code>deploy</code> directory. It will then issue the deploy command.</p>

<h2 id="options">Options</h2>

<table>
<thead>
<tr>
<th align="left">Option</th>
<th align="left">Description</th>
<th>Mandetory</th>
</tr>
</thead>

<tbody>
<tr>
<td align="left">name</td>
<td align="left">Deployment unique name</td>
<td>YES</td>
</tr>

<tr>
<td align="left">resource</td>
<td align="left">Name of resource which contains binary files for deployment  jar/war/zip</td>
<td>YES</td>
</tr>

<tr>
<td align="left">topology</td>
<td align="left">Deployment topology</td>
<td>NO</td>
</tr>

<tr>
<td align="left">sla</td>
<td align="left">SLA definitions</td>
<td>NO</td>
</tr>

<tr>
<td align="left">contextProperties</td>
<td align="left">Properties overriding pu.properties</td>
<td>NO</td>
</tr>
</tbody>
</table>

<p>Examples:</p>

<p>The following deploys a processing unit jar file named <code>data-processor.jar</code> using the <code>sync_replicated</code> cluster schema with 2 instances.</p>

<pre><code class="language-bash">curl -X POST --header 'Content-Type: application/json' --header 'Accept: text/plain' -d '{
   "name": "data-processor", 
   "resource": "data-processor.jar", 
   "topology": { 
     "schema": "sync_replicated", 
     "instances": 2, 
     "partitions": 0,  
     "backupsPerPartition": 0 
   },  
   "sla": {  
     "requiresIsolation": true, 
     "zones": [ 
       "green" 
     ], 
     "maxInstancesPerVM": 1, 
     "maxInstancesPerMachine": 1 
   }, 
   "contextProperties": {}  
 }' 'http://localhost:8090/v1/deployments'
</code></pre>

<h1 id="deploy-space">deploy space</h1>

<h2 id="syntax-1">Syntax</h2>

<pre><code class="language-bash"> curl -X POST  [url/spaces] [space name] [options]
</code></pre>

<h2 id="description-1">Description</h2>

<p>A Space only Processing Unit can be easily deployed onto the Service Grid.</p>

<h2 id="options-1">Options</h2>

<table>
<thead>
<tr>
<th align="left">Option</th>
<th align="left">Description</th>
<th align="center">Mandatory</th>
<th align="left">Default</th>
</tr>
</thead>

<tbody>
<tr>
<td align="left">name</td>
<td align="left">Name of the space</td>
<td align="center">YES</td>
<td align="left"></td>
</tr>

<tr>
<td align="left">partitions</td>
<td align="left">Number of partitions</td>
<td align="center">NO</td>
<td align="left">0</td>
</tr>

<tr>
<td align="left">backups</td>
<td align="left">true if each partition should have a backup, false otherwise</td>
<td align="center">NO</td>
<td align="left">false</td>
</tr>

<tr>
<td align="left">requiresIsolation</td>
<td align="left">true if each instance should be provisioned in an isolated container, i.e. without any other instances at the same container, false otherwise.</td>
<td align="center">NO</td>
<td align="left">false</td>
</tr>
</tbody>
</table>

<p>Examples:</p>

<p>The following deploys a simple space named <code>mySpace</code>:</p>

<pre><code class="language-bash">curl -X POST --header 'Content-Type: application/json' --header 'Accept: text/plain' 'http://localhost:8090/v1/spaces?name=mySpace&amp;partitions=0&amp;backups=false&amp;requiresIsolation=false'
</code></pre>

<p>The following deploys a space named <code>mySpace</code>, using 4 partions with each a backup and the isolation level set to true, requesting that the instances need to be deployed on different machines.</p>

<pre><code class="language-bash">curl -X POST --header 'Content-Type: application/json' --header 'Accept: text/plain' 'http://localhost:8090/v1/spaces?name=mySpace&amp;partitions=4&amp;backups=true&amp;requiresIsolation=true'
</code></pre>

<h1 id="undeploy-resource">undeploy resource</h1>

<h2 id="syntax-2">Syntax</h2>

<pre><code class="language-bash">curl -X DELETE [url]/deployments/resource_name
</code></pre>

<h2 id="description-2">Description</h2>

<p>Undeploys an <a href="../dev-java/deploying-onto-the-service-grid.htm/#Application Deployment and Processing Unit Dependencies">application</a> from the service grid, while respecting pu dependency order.</p>

<p>Example:</p>

<pre><code class="language-bash">curl -X DELETE --header 'Accept: text/plain' 'http://localhost:8090/v1/deployments/myPu'
</code></pre>

</body>
</html>