<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <body>
        <h1>Deploying the <MadCap:variable name="General.ProductNameXAP" /> Services</h1>
        <p>After your cluster is up and running, you can deploy <MadCap:variable name="General.ProductNameXAP" /> services and microservices. </p>
        <p MadCap:conditions="Version.15-5-died">The gsctl utility supports deploying stateful, stateless, and web services. The default service type is stateless.</p>
        <div MadCap:conditions="Version.15-5-born">
            <p>The deploy operation can be done using the GigaSpaces CLI (<MadCap:xref href="../../../../admin/deploy-command-line-interface.html">Deploy with Command Line</MadCap:xref>), the REST API (<MadCap:xref href="../../../../admin/deploy-rest.html">Deploy with REST</MadCap:xref>) and the Ops Manager (<MadCap:xref href="../../../../opm/opm-deploy-undeploy-service.html">Deploy and Undeploy Services in Ops Manager</MadCap:xref>).</p>
            <p>The cluster is started as secured. Access to the Ops Manager and the REST API requires the user to be authenticated. Three built-in users are pre-defined: gs-admin, gs-mngr and gs-viewer. The password is the Nomad token from the output of the <code class="language-bash">create</code> command.</p>
        </div>
        <p MadCap:conditions="Version.15-5-died">The gsctl tool comes with sample processor (stateful) and feeder (stateless) services in the Services folder. You must use the default artifact repository when deploying the sample services. </p>
        <p MadCap:conditions="Version.15-5-born">The gsctl tool comes with sample processor (stateful) and feeder (stateless) services in the default artifacts repository. To deploy them, use 'data-processor.jar' and 'data-feeder.jar' in the URL in the deploy screen.</p>
        <div class="tc-admon-note">
            <p>For more information about the artifact repository, see the <MadCap:xref href="../../../../orchestration/gsctl-manage-product-version.html">Managing the [%=General.ProductNameXAP%] Product Version</MadCap:xref> topic.</p>
        </div>
        <div MadCap:conditions="Version.15-5-died">
            <p class="tc-todo">To deploy the sample <MadCap:variable name="General.ProductNameXAP" /> services:</p>
            <ol>
                <li>
                    <p>When deploying the sample services, you should first deploy the processor service . As this is a stateful service, you need to specify both the service type and service name. Type the following command to deploy a processor service called <span class="tc-bold">mySpace</span>:</p><pre><code class="language-bash">deploy --type=stateful mySpace data-processor.jar</code></pre>
                </li>
                <li>
                    <p>Next, deploy the feeder service. As this is a stateless service, you only have to specify the service name. Type the following command to deploy a feeder service called <span class="tc-bold">myFeeder</span>:</p><pre><code>deploy --type=stateless myFeeder data-feeder.jar</code></pre>
                </li>
            </ol>
        </div>
    </body>
</html>